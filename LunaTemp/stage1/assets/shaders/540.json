{"id":540,"assetBundleId":-1,"data":[[],"Toony Colors Pro 2\/Legacy\/Mobile","ccfc7d68845db8341944b3091b59be55",["DIRECTIONAL","SHADOWS_SCREEN","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","LIGHTPROBE_SH","FOG_LINEAR","FOG_EXP","FOG_EXP2","VERTEXLIGHT_ON","TCP2_BUMP","TCP2_DISABLE_WRAPPED_LIGHT","TCP2_RAMPTEXT","_","__","INSTANCING_ON","SHADOWS_SHADOWMASK","DYNAMICLIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"],[[0,0,"FORWARD",4,0,[4,null],[1,null],[2,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["LIGHTMODE","FORWARDBASE"],["SHADOWSUPPORT","true"],["RENDERTYPE","Opaque"]],["_","TCP2_DISABLE_WRAPPED_LIGHT","TCP2_RAMPTEXT","TCP2_BUMP","__","INSTANCING_ON","FOG_LINEAR","FOG_EXP","FOG_EXP2","DIRECTIONAL","LIGHTPROBE_SH","SHADOWS_SHADOWMASK","DYNAMICLIGHTMAP_ON","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","VERTEXLIGHT_ON"],[[["_","TCP2_DISABLE_WRAPPED_LIGHT"],1],[["_","TCP2_RAMPTEXT"],1],[["_","TCP2_BUMP"],1],[["__","INSTANCING_ON"],1],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],1],[["DIRECTIONAL"],0],[["DIRECTIONAL","LIGHTPROBE_SH"],0],[["DIRECTIONAL","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","LIGHTMAP_ON"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","SHADOWS_SCREEN"],0],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"],0]],[[0,0,["DIRECTIONAL"],"#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.xy = u_xlat0.xy;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = vec3(0.0, 0.0, 0.0);\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _RampThreshold;\nuniform \tfloat _RampSmooth;\nuniform \tmediump vec4 _HColor;\nuniform \tmediump vec4 _SColor;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat5;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0.x = u_xlat16_0.x * 0.5 + 0.5;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat1 = (-_RampSmooth) * 0.5 + _RampThreshold;\n    u_xlat5 = u_xlat16_0.x + (-u_xlat1);\n    u_xlat9 = _RampSmooth * 0.5 + _RampThreshold;\n    u_xlat1 = (-u_xlat1) + u_xlat9;\n    u_xlat1 = float(1.0) \/ u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5;\n    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);\n    u_xlat5 = u_xlat1 * -2.0 + 3.0;\n    u_xlat1 = u_xlat1 * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5;\n    u_xlat16_0.xyz = (-_HColor.xyz) + _SColor.xyz;\n    u_xlat16_0.xyz = _SColor.www * u_xlat16_0.xyz + _HColor.xyz;\n    u_xlat16_2.xyz = (-u_xlat16_0.xyz) + _HColor.xyz;\n    u_xlat16_0.xyz = vec3(u_xlat1) * u_xlat16_2.xyz + u_xlat16_0.xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0],[0,0,["DIRECTIONAL","LIGHTPROBE_SH"],"#version 100\n\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.xy = u_xlat0.xy;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _RampThreshold;\nuniform \tfloat _RampSmooth;\nuniform \tmediump vec4 _HColor;\nuniform \tmediump vec4 _SColor;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat5;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0.x = u_xlat16_0.x * 0.5 + 0.5;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat1 = (-_RampSmooth) * 0.5 + _RampThreshold;\n    u_xlat5 = u_xlat16_0.x + (-u_xlat1);\n    u_xlat9 = _RampSmooth * 0.5 + _RampThreshold;\n    u_xlat1 = (-u_xlat1) + u_xlat9;\n    u_xlat1 = float(1.0) \/ u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5;\n    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);\n    u_xlat5 = u_xlat1 * -2.0 + 3.0;\n    u_xlat1 = u_xlat1 * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5;\n    u_xlat16_0.xyz = (-_HColor.xyz) + _SColor.xyz;\n    u_xlat16_0.xyz = _SColor.www * u_xlat16_0.xyz + _HColor.xyz;\n    u_xlat16_2.xyz = (-u_xlat16_0.xyz) + _HColor.xyz;\n    u_xlat16_0.xyz = vec3(u_xlat1) * u_xlat16_2.xyz + u_xlat16_0.xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0],[0,0,["DIRECTIONAL","SHADOWS_SCREEN"],"#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat7;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    gl_Position = u_xlat0;\n    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.xy = u_xlat1.xy;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat7 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat7 = inversesqrt(u_xlat7);\n    vs_TEXCOORD1.xyz = vec3(u_xlat7) * u_xlat1.xyz;\n    vs_TEXCOORD3.xyz = vec3(0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD5.zw = u_xlat0.zw;\n    vs_TEXCOORD5.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _RampThreshold;\nuniform \tfloat _RampSmooth;\nuniform \tmediump vec4 _HColor;\nuniform \tmediump vec4 _SColor;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nlowp float u_xlat10_5;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0.x = u_xlat16_0.x * 0.5 + 0.5;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat1 = (-_RampSmooth) * 0.5 + _RampThreshold;\n    u_xlat5.x = u_xlat16_0.x + (-u_xlat1);\n    u_xlat9 = _RampSmooth * 0.5 + _RampThreshold;\n    u_xlat1 = (-u_xlat1) + u_xlat9;\n    u_xlat1 = float(1.0) \/ u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5.x;\n    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);\n    u_xlat5.x = u_xlat1 * -2.0 + 3.0;\n    u_xlat1 = u_xlat1 * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5.x;\n    u_xlat5.xy = vs_TEXCOORD5.xy \/ vs_TEXCOORD5.ww;\n    u_xlat10_5 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlat16_0.x = u_xlat10_5 * u_xlat1;\n    u_xlat16_4.xyz = (-_HColor.xyz) + _SColor.xyz;\n    u_xlat16_4.xyz = _SColor.www * u_xlat16_4.xyz + _HColor.xyz;\n    u_xlat16_2.xyz = (-u_xlat16_4.xyz) + _HColor.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz + u_xlat16_4.xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0],[0,0,["DIRECTIONAL","VERTEXLIGHT_ON"],"#version 100\n\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nfloat u_xlat15;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.xy = u_xlat1.xy;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n    u_xlat1 = u_xlat0 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat2;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat2 = inversesqrt(u_xlat0);\n    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) \/ u_xlat0;\n    u_xlat1 = u_xlat1 * u_xlat2;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0 * u_xlat1;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _RampThreshold;\nuniform \tfloat _RampSmooth;\nuniform \tmediump vec4 _HColor;\nuniform \tmediump vec4 _SColor;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat5;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0.x = u_xlat16_0.x * 0.5 + 0.5;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat1 = (-_RampSmooth) * 0.5 + _RampThreshold;\n    u_xlat5 = u_xlat16_0.x + (-u_xlat1);\n    u_xlat9 = _RampSmooth * 0.5 + _RampThreshold;\n    u_xlat1 = (-u_xlat1) + u_xlat9;\n    u_xlat1 = float(1.0) \/ u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5;\n    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);\n    u_xlat5 = u_xlat1 * -2.0 + 3.0;\n    u_xlat1 = u_xlat1 * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5;\n    u_xlat16_0.xyz = (-_HColor.xyz) + _SColor.xyz;\n    u_xlat16_0.xyz = _SColor.www * u_xlat16_0.xyz + _HColor.xyz;\n    u_xlat16_2.xyz = (-u_xlat16_0.xyz) + _HColor.xyz;\n    u_xlat16_0.xyz = vec3(u_xlat1) * u_xlat16_2.xyz + u_xlat16_0.xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0],[0,0,["DIRECTIONAL","LIGHTPROBE_SH","SHADOWS_SCREEN"],"#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    gl_Position = u_xlat0;\n    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.xy = u_xlat1.xy;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_2.x);\n    u_xlat16_3 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_4.x = dot(unity_SHBr, u_xlat16_3);\n    u_xlat16_4.y = dot(unity_SHBg, u_xlat16_3);\n    u_xlat16_4.z = dot(unity_SHBb, u_xlat16_3);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_4.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_2.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz = u_xlat1.xyz;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD5.zw = u_xlat0.zw;\n    vs_TEXCOORD5.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _RampThreshold;\nuniform \tfloat _RampSmooth;\nuniform \tmediump vec4 _HColor;\nuniform \tmediump vec4 _SColor;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nlowp float u_xlat10_5;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0.x = u_xlat16_0.x * 0.5 + 0.5;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat1 = (-_RampSmooth) * 0.5 + _RampThreshold;\n    u_xlat5.x = u_xlat16_0.x + (-u_xlat1);\n    u_xlat9 = _RampSmooth * 0.5 + _RampThreshold;\n    u_xlat1 = (-u_xlat1) + u_xlat9;\n    u_xlat1 = float(1.0) \/ u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5.x;\n    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);\n    u_xlat5.x = u_xlat1 * -2.0 + 3.0;\n    u_xlat1 = u_xlat1 * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5.x;\n    u_xlat5.xy = vs_TEXCOORD5.xy \/ vs_TEXCOORD5.ww;\n    u_xlat10_5 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlat16_0.x = u_xlat10_5 * u_xlat1;\n    u_xlat16_4.xyz = (-_HColor.xyz) + _SColor.xyz;\n    u_xlat16_4.xyz = _SColor.www * u_xlat16_4.xyz + _HColor.xyz;\n    u_xlat16_2.xyz = (-u_xlat16_4.xyz) + _HColor.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz + u_xlat16_4.xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0],[0,0,["DIRECTIONAL","LIGHTPROBE_SH","VERTEXLIGHT_ON"],"#version 100\n\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nfloat u_xlat18;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.xy = u_xlat1.xy;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat16_3.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_3.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_3.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_4.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_4.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_4.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_3.xyz = unity_SHC.xyz * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = log2(u_xlat16_3.xyz);\n    u_xlat5.xyz = u_xlat5.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat5.xyz = exp2(u_xlat5.xyz);\n    u_xlat5.xyz = u_xlat5.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat5.xyz = max(u_xlat5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n    u_xlat1 = u_xlat0 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat2;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat2 = inversesqrt(u_xlat0);\n    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) \/ u_xlat0;\n    u_xlat1 = u_xlat1 * u_xlat2;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0 * u_xlat1;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + u_xlat5.xyz;\n    vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _RampThreshold;\nuniform \tfloat _RampSmooth;\nuniform \tmediump vec4 _HColor;\nuniform \tmediump vec4 _SColor;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat5;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0.x = u_xlat16_0.x * 0.5 + 0.5;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat1 = (-_RampSmooth) * 0.5 + _RampThreshold;\n    u_xlat5 = u_xlat16_0.x + (-u_xlat1);\n    u_xlat9 = _RampSmooth * 0.5 + _RampThreshold;\n    u_xlat1 = (-u_xlat1) + u_xlat9;\n    u_xlat1 = float(1.0) \/ u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5;\n    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);\n    u_xlat5 = u_xlat1 * -2.0 + 3.0;\n    u_xlat1 = u_xlat1 * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5;\n    u_xlat16_0.xyz = (-_HColor.xyz) + _SColor.xyz;\n    u_xlat16_0.xyz = _SColor.www * u_xlat16_0.xyz + _HColor.xyz;\n    u_xlat16_2.xyz = (-u_xlat16_0.xyz) + _HColor.xyz;\n    u_xlat16_0.xyz = vec3(u_xlat1) * u_xlat16_2.xyz + u_xlat16_0.xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0],[0,0,["DIRECTIONAL","SHADOWS_SCREEN","VERTEXLIGHT_ON"],"#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nfloat u_xlat18;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    gl_Position = u_xlat1;\n    u_xlat2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.xy = u_xlat2.xy;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz = vec3(u_xlat18) * u_xlat2.xyz;\n    vs_TEXCOORD1.xyz = u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat2.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;\n    u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;\n    u_xlat3 = u_xlat5 * u_xlat5 + u_xlat3;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) \/ u_xlat0;\n    u_xlat2 = u_xlat2 * u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0 * u_xlat2;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n    u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5, 0.5);\n    vs_TEXCOORD5.zw = u_xlat1.zw;\n    vs_TEXCOORD5.xy = u_xlat0.zz + u_xlat0.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _RampThreshold;\nuniform \tfloat _RampSmooth;\nuniform \tmediump vec4 _HColor;\nuniform \tmediump vec4 _SColor;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nlowp float u_xlat10_5;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0.x = u_xlat16_0.x * 0.5 + 0.5;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat1 = (-_RampSmooth) * 0.5 + _RampThreshold;\n    u_xlat5.x = u_xlat16_0.x + (-u_xlat1);\n    u_xlat9 = _RampSmooth * 0.5 + _RampThreshold;\n    u_xlat1 = (-u_xlat1) + u_xlat9;\n    u_xlat1 = float(1.0) \/ u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5.x;\n    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);\n    u_xlat5.x = u_xlat1 * -2.0 + 3.0;\n    u_xlat1 = u_xlat1 * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5.x;\n    u_xlat5.xy = vs_TEXCOORD5.xy \/ vs_TEXCOORD5.ww;\n    u_xlat10_5 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlat16_0.x = u_xlat10_5 * u_xlat1;\n    u_xlat16_4.xyz = (-_HColor.xyz) + _SColor.xyz;\n    u_xlat16_4.xyz = _SColor.www * u_xlat16_4.xyz + _HColor.xyz;\n    u_xlat16_2.xyz = (-u_xlat16_4.xyz) + _HColor.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz + u_xlat16_4.xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0],[0,0,["DIRECTIONAL","LIGHTPROBE_SH","SHADOWS_SCREEN","VERTEXLIGHT_ON"],"#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    gl_Position = u_xlat1;\n    u_xlat2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.xy = u_xlat2.xy;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    vs_TEXCOORD1.xyz = u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat16_3.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_3.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_3.x);\n    u_xlat16_4 = u_xlat2.yzzx * u_xlat2.xyzz;\n    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_4);\n    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_4);\n    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_4);\n    u_xlat16_3.xyz = unity_SHC.xyz * u_xlat16_3.xxx + u_xlat16_5.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat6.xyz = log2(u_xlat16_3.xyz);\n    u_xlat6.xyz = u_xlat6.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat6.xyz = exp2(u_xlat6.xyz);\n    u_xlat6.xyz = u_xlat6.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat6.xyz = max(u_xlat6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat2.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;\n    u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;\n    u_xlat3 = u_xlat5 * u_xlat5 + u_xlat3;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) \/ u_xlat0;\n    u_xlat2 = u_xlat2 * u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0 * u_xlat2;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + u_xlat6.xyz;\n    vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n    u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5, 0.5);\n    vs_TEXCOORD5.zw = u_xlat1.zw;\n    vs_TEXCOORD5.xy = u_xlat0.zz + u_xlat0.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _RampThreshold;\nuniform \tfloat _RampSmooth;\nuniform \tmediump vec4 _HColor;\nuniform \tmediump vec4 _SColor;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nfloat u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nlowp float u_xlat10_5;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0.x = u_xlat16_0.x * 0.5 + 0.5;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat1 = (-_RampSmooth) * 0.5 + _RampThreshold;\n    u_xlat5.x = u_xlat16_0.x + (-u_xlat1);\n    u_xlat9 = _RampSmooth * 0.5 + _RampThreshold;\n    u_xlat1 = (-u_xlat1) + u_xlat9;\n    u_xlat1 = float(1.0) \/ u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5.x;\n    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);\n    u_xlat5.x = u_xlat1 * -2.0 + 3.0;\n    u_xlat1 = u_xlat1 * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat5.x;\n    u_xlat5.xy = vs_TEXCOORD5.xy \/ vs_TEXCOORD5.ww;\n    u_xlat10_5 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlat16_0.x = u_xlat10_5 * u_xlat1;\n    u_xlat16_4.xyz = (-_HColor.xyz) + _SColor.xyz;\n    u_xlat16_4.xyz = _SColor.www * u_xlat16_4.xyz + _HColor.xyz;\n    u_xlat16_2.xyz = (-u_xlat16_4.xyz) + _HColor.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz + u_xlat16_4.xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0]],[],0]],[],[["_Color",0,1,1,1,1,""],["_HColor",0,0.785000026226044,0.785000026226044,0.785000026226044,1,""],["_SColor",0,0.194999992847443,0.194999992847443,0.194999992847443,1,""],["_MainTex",4,0,0,0,0,"white"],["_Ramp",4,0,0,0,0,"gray"],["_RampThreshold",3,0.5,0,1,0,""],["_RampSmooth",3,0.100000001490116,0.00999999977648258,1,0,""],["_BumpMap",4,0,0,0,0,"bump"]],0,20,0,0]}